The dangling pointer occured in list_delete_element(e) method where free(e) was called. While the pointers in the list (prev, next, head, tail) were dealt with already in the given code, it failed to consider the pointer from the node in tree that points to specific elements in the list. Trying to free the element while the tree node was still pointing to it ended up in the memory leak. We fixed this using reference counting, and only calling free when there are no pointers pointing to the elements in the list.
